listing_price.Predict = predict(reg.training, ams.test),
listing_price.Error = listing_price.Predict - price,
listing_price.AbsError = abs(listing_price.Predict - price),
listing_price.APE = (abs(listing_price.Predict - price)) / listing_price.Predict)
ams.test %>%
st_drop_geometry() %>%
summarise(MAE = mean(listing_price.AbsError),
MAPE = mean(abs(listing_price.APE)*100)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Percentage Error')) %>%
kable_classic()
ols <- lm(price ~ ., st_drop_geometry(ams.training))
vif(ols) %>%
data.frame() %>%
clean_names() %>%
select(gvif) %>%
arrange(desc(gvif)) %>%
kable()
coords <- st_coordinates(data_to_train)
neighborList <- knn2nb(knearneigh(coords, 4))
spatialWeights <- nb2listw(neighborList, style="W")
data_to_train$lagPrice <- lag.listw(spatialWeights, data_to_train$price)
data_to_train_test <- data_to_train
inTrain_nhood <- createDataPartition(
y = paste(data_to_train_test$room_type),
p = .70, list = FALSE)
nhood.training <- data_to_train[inTrain_nhood,]
nhood.test <- data_to_train[-inTrain_nhood,]
hood.training<-
lm(price ~ ., data = st_drop_geometry(nhood.training))
summary(hood.training)
data_to_train <- nhoods_sub %>%
select(price,cancellation_policy,bed_type,room_type,accommodates,bathrooms,bedrooms,cleaning_fee,amenities_lengths,extra_people,reviews_per_month,review_polarity,greenroof_nn3,wallart_nn3,market_nn2,tram_nn3,age,AvrVal,postcode4,daycare_num,dis_to_sub,elec_using,gas_using,owned_pct,median_HH_num,avr_fam_size,pct_wes_bkg,pct_dutch_bkg,residents)
#nhoods<- left_join(listing_details,nhoods,by = 'id')
inTrain <- createDataPartition(
y = paste(data_to_train$room_type),
p = .70, list = FALSE)
ams.training <- data_to_train[inTrain,]
ams.test <- data_to_train[-inTrain,]
#temp
reg.training <-
lm(price ~ ., data = st_drop_geometry(ams.training))
ams.test <-
ams.test %>%
na.omit()
ams.test <- ams.test %>%
mutate(Regression = "Baseline Regression",
listing_price.Predict = predict(reg.training, ams.test),
listing_price.Error = listing_price.Predict - price,
listing_price.AbsError = abs(listing_price.Predict - price),
listing_price.APE = (abs(listing_price.Predict - price)) / listing_price.Predict)
ams.test %>%
st_drop_geometry() %>%
summarise(MAE = mean(listing_price.AbsError),
MAPE = mean(abs(listing_price.APE)*100)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Percentage Error')) %>%
kable_classic()
ols <- lm(price ~ ., st_drop_geometry(ams.training))
vif(ols) %>%
data.frame() %>%
clean_names() %>%
select(gvif) %>%
arrange(desc(gvif)) %>%
kable()
coords <- st_coordinates(data_to_train)
neighborList <- knn2nb(knearneigh(coords, 4))
spatialWeights <- nb2listw(neighborList, style="W")
data_to_train$lagPrice <- lag.listw(spatialWeights, data_to_train$price)
data_to_train_test <- data_to_train
inTrain_nhood <- createDataPartition(
y = paste(data_to_train_test$room_type),
p = .70, list = FALSE)
nhood.training <- data_to_train[inTrain_nhood,]
nhood.test <- data_to_train[-inTrain_nhood,]
hood.training<-
lm(price ~ ., data = st_drop_geometry(nhood.training))
summary(hood.training)
nhoods_sub$per_bathroom <- nhoods_sub$per_bathroom / nhoods_sub$accommodates
nhoods_sub$per_bathroom <- nhoods_sub$bathroom / nhoods_sub$accommodates
View(nhoods_sub)
View(listing_details)
nhoods_sub$accommodates
nhoods_sub$per_bed <- nhoods_sub$bedrooms / nhoods_sub$accommodates
nhoods_sub$rating_sum <-nhoods_sub$reviews_per_month * 12 * nhoods_sub$review_scores_rating
listing_details<- listing_details%>%st_drop_geometry()%>%select(-room_type,-reviews_per_month)
nhoods_sub <- left_join(nhoods,listing_details,  by = 'id')%>% filter(price < 300)%>%
select(id,price,cancellation_policy,bed_type,property_type,room_type,accommodates,bathrooms,bedrooms,cleaning_fee,review_scores_rating,amenities_lengths,extra_people,reviews_per_month,review_polarity,greenroof_nn3,wallart_nn3,market_nn2,tram_nn3,age,AvrVal,postcode4,daycare_num,dis_to_sub,elec_using,gas_using,owned_pct,median_HH_num,avr_fam_size,pct_wes_bkg,pct_dutch_bkg,residents)
nhoods_sub$rating_sum <-nhoods_sub$reviews_per_month * 12 * nhoods_sub$review_scores_rating
nhoods_sub <- left_join(nhoods,listing_details,  by = 'id')%>% filter(price < 300)%>%
select(id,price,cancellation_policy,bed_type,property_type,room_type,accommodates,bathrooms,bedrooms,cleaning_fee,review_scores_rating,amenities_lengths,extra_people,reviews_per_month,review_polarity,greenroof_nn3,wallart_nn3,market_nn2,tram_nn3,age,AvrVal,postcode4,daycare_num,dis_to_sub,elec_using,gas_using,owned_pct,median_HH_num,avr_fam_size,pct_wes_bkg,pct_dutch_bkg,residents,maximum_nights,minimum_nights)
View(nhoods)
View(listing_details)
View(housing_value_df)
View(nhoods)
listing_details<- listing_details%>%st_drop_geometry()%>%select(-minimum_nights)
nhoods_sub <- left_join(nhoods,listing_details,  by = 'id')%>% filter(price < 300)%>%
select(id,price,cancellation_policy,bed_type,property_type,room_type,accommodates,bathrooms,bedrooms,cleaning_fee,review_scores_rating,amenities_lengths,extra_people,reviews_per_month,review_polarity,greenroof_nn3,wallart_nn3,market_nn2,tram_nn3,age,AvrVal,postcode4,daycare_num,dis_to_sub,elec_using,gas_using,owned_pct,median_HH_num,avr_fam_size,pct_wes_bkg,pct_dutch_bkg,residents,maximum_nights,minimum_nights)
nhoods_sub$price_sum <- nhoods_sub$price + nhoods_sub$cleaning_fee + nhoods_sub$extra_people
nhoods_sub$price_sum_per <- (nhoods_sub$price + nhoods_sub$cleaning_fee + nhoods_sub$extra_people) / nhoods_sub$accommodates
lab = TRUE) +
labs(title = "Correlation across numeric variables")
ggcorrplot(
round(cor(nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per)), 1),
p.mat = cor_pmat(nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
ggcorrplot(
ggcorrplot(
round(cor(nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per)%>%na.omit()), 1),
p.mat = cor_pmat(nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per)%>%na.omit()),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
#额外加了review_scores_rating，maximum_nights，minimum_nights
nhoods_sub$per_bathroom <- nhoods_sub$bathroom / nhoods_sub$accommodates
ggcorrplot(
round(cor(nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per)%>%na.omit()), 1),
p.mat = cor_pmat(nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per)%>%na.omit()),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
nhoods_sub$per_bed <- nhoods_sub$bedrooms / nhoods_sub$accommodates
nhoods_sub$rating_sum <-nhoods_sub$reviews_per_month * 12 * nhoods_sub$review_scores_rating
nhoods_sub$night_range <- nhoods_sub$maximum_nights - nhoods_sub$minimum_nights
nhoods_sub$price_sum <- nhoods_sub$price + nhoods_sub$cleaning_fee + nhoods_sub$extra_people
nhoods_sub$price_sum_per <- (nhoods_sub$price + nhoods_sub$cleaning_fee + nhoods_sub$extra_people) / nhoods_sub$accommodates
ggcorrplot(
round(cor(nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per)%>%na.omit()), 1),
p.mat = cor_pmat(nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per)%>%na.omit()),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
ggplot(aes(Value, price)) +
st_drop_geometry(nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per)) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) +
geom_smooth(data = . %>% filter(price >0), method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 5, scales = "free") +
labs(title = "Price as a function of continuous variables") +
theme_light()
xxxx<-nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per)%>%na.omit()
ggcorrplot(
round(cor(xxxx), 1),
p.mat = cor_pmat(xxxx),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
View(xxxx)
xxxx<-nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum,price_sum_per)%>%na.omit()%>%st_drop_geometry()
ggcorrplot(
round(cor(xxxx), 1),
p.mat = cor_pmat(xxxx),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
st_drop_geometry(xxxx) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) +
geom_smooth(data = . %>% filter(price >0), method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 5, scales = "free") +
labs(title = "Price as a function of continuous variables") +
theme_light()
ggcorrplot(
round(cor(xxxx), 1),
p.mat = cor_pmat(xxxx),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
nhoods_sub$price_sum_per <- ( nhoods_sub$cleaning_fee + nhoods_sub$extra_people) / nhoods_sub$accommodates
xxxx<-nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum_per)%>%na.omit()%>%st_drop_geometry()
ggcorrplot(
round(cor(xxxx), 1),
p.mat = cor_pmat(xxxx),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
xxxx<-nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum_per,bathrooms)%>%na.omit()%>%st_drop_geometry()
ggcorrplot(
round(cor(xxxx), 1),
p.mat = cor_pmat(xxxx),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
st_drop_geometry(xxxx) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) +
geom_smooth(data = . %>% filter(price >0), method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 5, scales = "free") +
labs(title = "Price as a function of continuous variables") +
theme_light()
ggcorrplot(
round(cor(xxxx), 1),
p.mat = cor_pmat(xxxx),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
xxxx<-nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum_per,bathrooms,accommodates)%>%na.omit()%>%st_drop_geometry()
st_drop_geometry(xxxx) %>%
gather(Variable, Value, -price) %>%
ggplot(aes(Value, price)) +
geom_point(size = .5) +
geom_smooth(data = . %>% filter(price >0), method = "lm", se=F, colour = "#FA7800") +
facet_wrap(~Variable, ncol = 5, scales = "free") +
labs(title = "Price as a function of continuous variables") +
theme_light()
ggcorrplot(
round(cor(xxxx), 1),
p.mat = cor_pmat(xxxx),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
xxxx<-nhoods_sub%>%select(price,per_bathroom,per_bed,rating_sum,night_range,price_sum_per,bathrooms)%>%na.omit()%>%st_drop_geometry()
ggcorrplot(
round(cor(xxxx), 1),
p.mat = cor_pmat(xxxx),
colors = c("#E63946", "white", "#2A9D8F"),
type="lower",
insig = "blank",
lab = TRUE) +
labs(title = "Correlation across numeric variables")
data_to_train <- nhoods_sub %>%
select(price,cancellation_policy,bed_type,room_type,accommodates,bathrooms,bedrooms,cleaning_fee,amenities_lengths,extra_people,reviews_per_month,review_polarity,greenroof_nn3,wallart_nn3,market_nn2,tram_nn3,age,AvrVal,postcode4,daycare_num,dis_to_sub,elec_using,gas_using,owned_pct,median_HH_num,avr_fam_size,pct_wes_bkg,pct_dutch_bkg,residents,per_bathroom)
#nhoods<- left_join(listing_details,nhoods,by = 'id')
inTrain <- createDataPartition(
y = paste(data_to_train$room_type),
p = .70, list = FALSE)
ams.training <- data_to_train[inTrain,]
ams.test <- data_to_train[-inTrain,]
#temp
reg.training <-
lm(price ~ ., data = st_drop_geometry(ams.training))
ams.test <-
ams.test %>%
na.omit()
ams.test <- ams.test %>%
mutate(Regression = "Baseline Regression",
listing_price.Predict = predict(reg.training, ams.test),
listing_price.Error = listing_price.Predict - price,
listing_price.AbsError = abs(listing_price.Predict - price),
listing_price.APE = (abs(listing_price.Predict - price)) / listing_price.Predict)
ams.test %>%
st_drop_geometry() %>%
summarise(MAE = mean(listing_price.AbsError),
MAPE = mean(abs(listing_price.APE)*100)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Percentage Error')) %>%
kable_classic()
ols <- lm(price ~ ., st_drop_geometry(ams.training))
vif(ols) %>%
data.frame() %>%
clean_names() %>%
select(gvif) %>%
arrange(desc(gvif)) %>%
kable()
coords <- st_coordinates(data_to_train)
neighborList <- knn2nb(knearneigh(coords, 4))
spatialWeights <- nb2listw(neighborList, style="W")
data_to_train$lagPrice <- lag.listw(spatialWeights, data_to_train$price)
data_to_train_test <- data_to_train
inTrain_nhood <- createDataPartition(
y = paste(data_to_train_test$room_type),
p = .70, list = FALSE)
nhood.training <- data_to_train[inTrain_nhood,]
nhood.test <- data_to_train[-inTrain_nhood,]
hood.training<-
lm(price ~ ., data = st_drop_geometry(nhood.training))
summary(hood.training)
ggplot(ams.test%>%filter(listing_price.APE<= 1))+
geom_sf(aes(colour = listing_price.APE))+
geom_sf(data = district,fill = NA)+
scale_fill_viridis()+
labs(title = "MAE distribution") +
mapTheme()
ggplot(ams.test, aes(x = price, y = listing_price.Predict)) +
geom_point(alpha = 0.2) +
labs(title = "Predicted price vs real listing price",
subtitle = "Based on neighborhood model",
x = "Actual listing",
y = "Predicted listings") +
geom_abline() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal()
broom::glance(reg.training) %>%
kable(caption = 'Table Summary of Model Evaluation Parameters') %>%
kable_styling("striped", full_width = F)
coords <- st_coordinates(ams.training)
neighborList <- knn2nb(knearneigh(coords, 4))
spatialWeights <- nb2listw(neighborList, style="W")
ams.training$lagPrice <- lag.listw(spatialWeights, ams.training$price)
ams.training_lag <- ams.training%>% st_drop_geometry()
lag.training<-
lm(price ~ ., data = as.data.frame(ams.training_lag))
fitControl <- trainControl(method = "cv", number = 100)
set.seed(825)
reg.cv <-
train(price ~ ., data = st_drop_geometry(data_to_train),
method = "lm", trControl = fitControl, na.action = na.pass)
ggplot(data = reg.cv$resample) +
geom_histogram(aes(x = reg.cv$resample$MAE), fill = 'orange') +
labs(title="Distribution of Cross-validation MAE",
subtitle = "K = 100\n",
caption = "Figure RESULT 4.2") +
xlab('MAE of Model 2') +
ylab('Count') +
plotTheme()
summary(reg.training)
nhoods_sub <-transform(nhoods_sub, id = as.numeric(id),postcode4 = as.numeric(postcode4))
data_to_train <- nhoods_sub %>%
select(price,cancellation_policy,bed_type,room_type,accommodates,bathrooms,bedrooms,cleaning_fee,amenities_lengths,extra_people,reviews_per_month,review_polarity,greenroof_nn3,wallart_nn3,market_nn2,tram_nn3,age,AvrVal,postcode4,daycare_num,dis_to_sub,elec_using,gas_using,owned_pct,median_HH_num,avr_fam_size,pct_wes_bkg,pct_dutch_bkg,residents,per_bathroom)
#nhoods<- left_join(listing_details,nhoods,by = 'id')
inTrain <- createDataPartition(
y = paste(data_to_train$room_type),
p = .70, list = FALSE)
ams.training <- data_to_train[inTrain,]
ams.test <- data_to_train[-inTrain,]
#temp
reg.training <-
lm(price ~ ., data = st_drop_geometry(ams.training))
ams.test <-
ams.test %>%
na.omit()
ams.test <- ams.test %>%
mutate(Regression = "Baseline Regression",
listing_price.Predict = predict(reg.training, ams.test),
listing_price.Error = listing_price.Predict - price,
listing_price.AbsError = abs(listing_price.Predict - price),
listing_price.APE = (abs(listing_price.Predict - price)) / listing_price.Predict)
ams.test %>%
st_drop_geometry() %>%
summarise(MAE = mean(listing_price.AbsError),
MAPE = mean(abs(listing_price.APE)*100)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Percentage Error')) %>%
kable_classic()
ols <- lm(price ~ ., st_drop_geometry(ams.training))
vif(ols) %>%
data.frame() %>%
clean_names() %>%
select(gvif) %>%
arrange(desc(gvif)) %>%
kable()
coords <- st_coordinates(data_to_train)
neighborList <- knn2nb(knearneigh(coords, 4))
spatialWeights <- nb2listw(neighborList, style="W")
data_to_train$lagPrice <- lag.listw(spatialWeights, data_to_train$price)
data_to_train_test <- data_to_train
inTrain_nhood <- createDataPartition(
y = paste(data_to_train_test$room_type),
p = .70, list = FALSE)
nhood.training <- data_to_train[inTrain_nhood,]
nhood.test <- data_to_train[-inTrain_nhood,]
hood.training<-
lm(price ~ ., data = st_drop_geometry(nhood.training))
summary(hood.training)
ggplot(ams.test%>%filter(listing_price.APE<= 1))+
geom_sf(aes(colour = listing_price.APE))+
geom_sf(data = district,fill = NA)+
scale_fill_viridis()+
labs(title = "MAE distribution") +
mapTheme()
ggplot(ams.test, aes(x = price, y = listing_price.Predict)) +
geom_point(alpha = 0.2) +
labs(title = "Predicted price vs real listing price",
subtitle = "Based on neighborhood model",
x = "Actual listing",
y = "Predicted listings") +
geom_abline() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal()
broom::glance(reg.training) %>%
kable(caption = 'Table Summary of Model Evaluation Parameters') %>%
kable_styling("striped", full_width = F)
coords <- st_coordinates(ams.training)
neighborList <- knn2nb(knearneigh(coords, 4))
spatialWeights <- nb2listw(neighborList, style="W")
ams.training$lagPrice <- lag.listw(spatialWeights, ams.training$price)
ams.training_lag <- ams.training%>% st_drop_geometry()
lag.training<-
lm(price ~ ., data = as.data.frame(ams.training_lag))
fitControl <- trainControl(method = "cv", number = 100)
set.seed(825)
reg.cv <-
train(price ~ ., data = st_drop_geometry(data_to_train),
method = "lm", trControl = fitControl, na.action = na.pass)
ggplot(data = reg.cv$resample) +
geom_histogram(aes(x = reg.cv$resample$MAE), fill = 'orange') +
labs(title="Distribution of Cross-validation MAE",
subtitle = "K = 100\n",
caption = "Figure RESULT 4.2") +
xlab('MAE of Model 2') +
ylab('Count') +
plotTheme()
data_to_train <- nhoods_sub %>%
select(price, accommodates, AvrVal,bathrooms,bedrooms,beds,cleaning_fee,high_income_pct,greenroof_nn3,market_nn3,median_HH_num,owned_pct,pct_dutch_bkg,pct_wes_bkg,reviews_per_month,tram_nn3,room_type,polarity_name,polarity_overview,polarity_rules,review_polarity)
data_to_train <- nhoods_sub %>%
select(price,cancellation_policy,bed_type,room_type,accommodates,bathrooms,bedrooms,cleaning_fee,amenities_lengths,extra_people,reviews_per_month,review_polarity,greenroof_nn3,wallart_nn3,market_nn2,tram_nn3,age,AvrVal,postcode4,daycare_num,dis_to_sub,elec_using,gas_using,owned_pct,median_HH_num,avr_fam_size,pct_wes_bkg,pct_dutch_bkg,residents,per_bathroom)
#nhoods<- left_join(listing_details,nhoods,by = 'id')
inTrain <- createDataPartition(
y = paste(data_to_train$room_type),
p = .70, list = FALSE)
ams.training <- data_to_train[inTrain,]
ams.test <- data_to_train[-inTrain,]
#temp
reg.training <-
lm(price ~ ., data = st_drop_geometry(ams.training))
ams.test <-
ams.test %>%
na.omit()
ams.test <- ams.test %>%
mutate(Regression = "Baseline Regression",
listing_price.Predict = predict(reg.training, ams.test),
listing_price.Error = listing_price.Predict - price,
listing_price.AbsError = abs(listing_price.Predict - price),
listing_price.APE = (abs(listing_price.Predict - price)) / listing_price.Predict)
ams.test %>%
st_drop_geometry() %>%
summarise(MAE = mean(listing_price.AbsError),
MAPE = mean(abs(listing_price.APE)*100)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Percentage Error')) %>%
kable_classic()
ols <- lm(price ~ ., st_drop_geometry(ams.training))
vif(ols) %>%
data.frame() %>%
clean_names() %>%
select(gvif) %>%
arrange(desc(gvif)) %>%
kable()
data_to_train <- nhoods_sub %>%
select(price,cancellation_policy,bed_type,room_type,accommodates,bathrooms,bedrooms,cleaning_fee,amenities_lengths,extra_people,reviews_per_month,review_polarity,greenroof_nn3,wallart_nn3,market_nn2,tram_nn3,age,AvrVal,postcode4,daycare_num,dis_to_sub,gas_using,owned_pct,median_HH_num,pct_wes_bkg,pct_dutch_bkg,residents,per_bathroom)
#nhoods<- left_join(listing_details,nhoods,by = 'id')
inTrain <- createDataPartition(
y = paste(data_to_train$room_type),
p = .70, list = FALSE)
ams.training <- data_to_train[inTrain,]
ams.test <- data_to_train[-inTrain,]
#temp
reg.training <-
lm(price ~ ., data = st_drop_geometry(ams.training))
ams.test <-
ams.test %>%
na.omit()
ams.test <- ams.test %>%
mutate(Regression = "Baseline Regression",
listing_price.Predict = predict(reg.training, ams.test),
listing_price.Error = listing_price.Predict - price,
listing_price.AbsError = abs(listing_price.Predict - price),
listing_price.APE = (abs(listing_price.Predict - price)) / listing_price.Predict)
ams.test %>%
st_drop_geometry() %>%
summarise(MAE = mean(listing_price.AbsError),
MAPE = mean(abs(listing_price.APE)*100)) %>%
kbl(col.name=c('Mean Absolute Error','Mean Absolute Percentage Error')) %>%
kable_classic()
ols <- lm(price ~ ., st_drop_geometry(ams.training))
vif(ols) %>%
data.frame() %>%
clean_names() %>%
select(gvif) %>%
arrange(desc(gvif)) %>%
kable()
coords <- st_coordinates(data_to_train)
neighborList <- knn2nb(knearneigh(coords, 4))
spatialWeights <- nb2listw(neighborList, style="W")
data_to_train$lagPrice <- lag.listw(spatialWeights, data_to_train$price)
data_to_train_test <- data_to_train
inTrain_nhood <- createDataPartition(
y = paste(data_to_train_test$room_type),
p = .70, list = FALSE)
nhood.training <- data_to_train[inTrain_nhood,]
nhood.test <- data_to_train[-inTrain_nhood,]
hood.training<-
lm(price ~ ., data = st_drop_geometry(nhood.training))
summary(hood.training)
broom::glance(reg.training) %>%
kable(caption = 'Table Summary of Model Evaluation Parameters') %>%
kable_styling("striped", full_width = F)
fitControl <- trainControl(method = "cv", number = 100)
set.seed(825)
reg.cv <-
train(price ~ ., data = st_drop_geometry(data_to_train),
method = "lm", trControl = fitControl, na.action = na.pass)
ggplot(data = reg.cv$resample) +
geom_histogram(aes(x = reg.cv$resample$MAE), fill = 'orange') +
labs(title="Distribution of Cross-validation MAE",
subtitle = "K = 100\n",
caption = "Figure RESULT 4.2") +
xlab('MAE of Model 2') +
ylab('Count') +
plotTheme()
